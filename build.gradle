plugins {
    id 'fabric-loom' version '1.2-SNAPSHOT'
    id 'maven-publish'
}

loom {
    interfaceInjection {
        enableDependencyInterfaceInjection = true
    }
}

version = project.mod_version
group = project.maven_group

repositories {

    maven {
        name = "isXander (YACL)"
        url = "https://maven.isxander.dev/releases/"
    }
    maven {
        name = "TerraformersMC (ModMenu)"
        url = "https://maven.terraformersmc.com/releases/"
    }
    maven {
        name = "Shedaniel (REI)"
        url = "https://maven.shedaniel.me/"
    }
    maven {
        name = "CurseMaven"
        url = "https://www.cursemaven.com"
    }
}

dependencies {
    minecraft "com.mojang:minecraft:${project.minecraft_version}"
    mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
    modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

    modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

    // YACL was removed in 1.19.2 version, so for now it uses cloth-config instead. If you feel that it is needed, feel free to uncomment this.
    // include modImplementation("dev.isxander.yacl:yet-another-config-lib-fabric:${project.yacl_version}") {
    //        transitive(false)
    //    }

    modCompileOnly "com.terraformersmc:modmenu:${project.modmenu_version}"

    modRuntimeOnly "com.terraformersmc:modmenu:${project.modmenu_version}"

    modCompileOnly "me.shedaniel:RoughlyEnoughItems-fabric:${project.rei_version}"
    modCompileOnly "me.shedaniel:RoughlyEnoughItems-api-fabric:${project.rei_version}"

    include modApi("me.shedaniel.cloth:cloth-config-fabric:${project.cloth_config_api_version}") {
        exclude(group: "net.fabricmc.fabric-api")
    }
}

processResources {
    inputs.property "version", project.version
    inputs.property "minecraft_version", project.minecraft_version
    inputs.property "loader_version", project.loader_version
    filteringCharset "UTF-8"

    filesMatching("fabric.mod.json") {
        expand "version": project.version,
                "minecraft_version": project.minecraft_version,
                "loader_version": project.loader_version
    }
}

def targetJavaVersion = 17
tasks.withType(JavaCompile).configureEach {
    it.options.encoding = "UTF-8"
    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        it.options.release = targetJavaVersion
    }
}

java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
    archivesBaseName = project.archives_base_name
    withSourcesJar()
}

jar {
    from("LICENSE") {
        rename { "${it}_${project.archivesBaseName}"}
    }
}

configurations.all {
    resolutionStrategy {
        force("net.fabricmc:fabric-loader:$loader_version")
    }
}
